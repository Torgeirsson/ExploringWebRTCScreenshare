{"version":3,"sources":["Components/Stats.js","Components/MainVideo.js","Components/video.js","Components/Sidebar.js","Components/Navbar.js","Components/Login.js","App.js","serviceWorker.js","index.js"],"names":["prev","sender","socket","callRemote","localStream","pc","lid","isOffering","Stats","props","useState","bitrateOut","setBitrateOut","bitrateIn","setBitrateIn","pcs","id","useEffect","getSenders","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","getStats","then","statsReport","forEach","stat","type","has","timeDifference","timestamp","get","btrOut","bytesSent","btrIn","bytesReceived","toFixed","console","log","Video","stream","style","users","name","setName","show","videoRef","srcObject","video","controls","filter","elem","socketid","className","ref","autoPlay","pc_config","iceServers","urls","peerConnections","MainVideo","loginName","room","setPeersInRoom","peersInRoom","remoteVideos","setRemoteVideos","isDisplaying","setIsDisplaying","setUsers","io","on","emit","data","arr","Object","entries","push","senderFunction","message","pcFactory","remoteid","onnegotiationneeded","a","setLocalDescription","createOffer","localDescription","payload","target","onicecandidate","e","candidate","oniceconnectionstatechange","event","iceConnectionState","restartIce","ontrack","track","onunmute","streams","getTracks","addTrack","navigator","mediaDevices","getDisplayMedia","stop","localVideo","oninactive","RTCPeerConnection","enabled","signalingState","setRemoteDescription","RTCSessionDescription","addIceCandidate","RTCIceCandidate","sdp","videoStyle","width","height","margin","backgroundColor","class","onClick","map","index","key","Sidebar","peer","Navbar","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Login","setLoggedIn","setRoom","value","setValue","roomValue","setRoomValue","marginTop","padding","onSubmit","preventDefault","placeholder","onChange","App","loggedIn","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9d5692c3.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n\nlet prev, sender;\n\nconst Stats = (props) => {\n  const [bitrateOut, setBitrateOut] = useState(0);\n  const [bitrateIn, setBitrateIn] = useState(0);\n  const { pcs, id } = props;\n  let pc = pcs[id];\n\n  useEffect(() => {\n    sender = pc.getSenders()[0];\n  }, []);\n\n  useInterval(() => {\n    if (!pc || !sender) {\n      console.log(\"return\", pc, sender);\n      return;\n    }\n    sender.getStats().then((statsReport) => {\n      statsReport.forEach((stat) => {\n        if (stat.type === \"transport\") {\n          if (prev && prev.has(stat.id)) {\n            const timeDifference =\n              (stat.timestamp - prev.get(stat.id).timestamp) / 1000;\n            const btrOut =\n              (8 * (stat.bytesSent - prev.get(stat.id).bytesSent)) /\n              timeDifference /\n              100000;\n            const btrIn =\n              (8 * (stat.bytesReceived - prev.get(stat.id).bytesReceived)) /\n              timeDifference / 100000;\n\n            setBitrateOut(btrOut.toFixed(2));\n            setBitrateIn(btrIn.toFixed(2));\n          }\n        }\n      });\n      prev = statsReport;\n    });\n  }, 1000);\n\n  return (\n    <div>\n        <div>\n          <p>Bitrate utgående: {bitrateOut} Mbit/s | Bitrate inkommande: {bitrateIn} Mbit/s </p>\n        </div>\n    </div>\n  );\n};\n\nexport default Stats;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./../App.css\";\nimport Video from \"./video\";\nimport 'webrtc-adapter';\n\nconst pc_config = {\n  iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n};\n\nconst backend = \"https://agile-headland-95579.herokuapp.com/\";\nlet prev, socket, callRemote, localStream, pc;\nlet lid, isOffering;\nlet peerConnections = {};\n\nconst MainVideo = (props) => {\n  const { loginName, room, peersInRoom, setPeersInRoom } = props\n  const [remoteVideos, setRemoteVideos] = useState([]);\n  const [isDisplaying, setIsDisplaying] = useState(false);\n  const [users, setUsers] = useState({})\n\n  useEffect(() => {\n    socket = io(backend);\n\n    socket.on(\"connect\", () => {\n      console.log(\"connected\", loginName, room);\n      socket.emit(\"name-and-room\", {name: loginName, room: room})\n    });\n    socket.on(\"localID\", (socketid) => {\n      lid = socketid;\n    });\n    socket.on(\"name-update\", data => {\n      setUsers(data)\n      let arr = [];\n      Object.entries(data).forEach(elem => {\n        arr.push(elem[1].name)\n      })\n      setPeersInRoom(data);\n    })\n\n    //\n\n    const senderFunction = (message, data) => {\n      socket.emit(message, data);\n    };\n\n    const pcFactory = (pc, remoteid) => {\n\n      pc.onnegotiationneeded = async () => {\n        console.log(\"negotiationneeded\");\n        isOffering = true;\n        await pc.setLocalDescription(pc.createOffer());\n\n        if (pc.localDescription) {\n          console.log(\"sending offer\", pc.localDescription);\n          senderFunction(\"payload\", {\n            payload: pc.localDescription,\n            remoteid: lid,\n            target: remoteid,\n            type: \"offer\",\n          });\n        }\n        isOffering = false;\n      };\n\n\n      pc.onicecandidate = (e) => {\n        if (e && e.candidate) {\n          senderFunction(\"payload\", {\n            payload: e.candidate,\n            type: \"ice\",\n            remoteid: lid,\n            target: remoteid,\n          });\n        }\n      };\n\n      pc.oniceconnectionstatechange = (event) => {\n        if (pc.iceConnectionState === \"failed\") {\n          pc.restartIce();\n        }\n      };\n\n      pc.ontrack = async (track) => {\n        console.log(\"track\", track)\n        track.track.onunmute = async () => { \n        await setRemoteVideos((remoteVideos) => remoteVideos.filter((stream) => !(stream.socketid === remoteid)));\n        await setRemoteVideos((remoteVideos) => [...remoteVideos, { socketid: remoteid, video: track.streams[0] }]);\n        }\n      };\n\n      if (localStream) {\n        console.log(\"stream\", localStream);\n        localStream\n          .getTracks()\n          .forEach((track) => pc.addTrack(track, localStream));\n      }\n      peerConnections[remoteid] = pc;\n\n      return pc;\n    };\n\n    callRemote = () => {\n      navigator.mediaDevices.getDisplayMedia().then((stream) => {\n        if(localStream)\n        localStream.getTracks().forEach(track => {track.stop()});\n        if(localVideo && localVideo.current.srcObject)\n        localVideo.current.srcObject.getTracks().forEach(track => track.stop)\n        stream.oninactive = (e) => {\n          console.log(\"inactive\", e)\n          setIsDisplaying(false)\n        }\n        localVideo.current.srcObject = stream;\n        localStream = stream;\n        socket.emit(\"active-sender\");\n        setIsDisplaying(true);\n      });\n      \n    };\n\n    //\n\n    socket.on(\"want-to-watch\", async (socketid) => {\n      let pc;\n      if(!peerConnections[socketid]){\n      console.log(\"creating\");\n      pc = await pcFactory(new RTCPeerConnection(pc_config), socketid);\n      console.log(\"want to watch from\", socketid);\n      peerConnections[socketid] = pc;\n      } else {\n        console.log(\"not creating\")\n        pc = peerConnections[socketid];\n        if(localStream){\n        localStream.getTracks().forEach(track => track.enabled = true)\n        localStream.getTracks().forEach(track => {\n          try {\n          pc.addTrack(track, localStream)\n          } catch (e) {\n            console.log(e);\n          }\n        })\n      }\n      }\n\n    });\n\n    socket.on(\"payload\", async (data) => {\n      if (!peerConnections[data.remoteid]) {\n        pc = await pcFactory(new RTCPeerConnection(pc_config), data.remoteid);\n        peerConnections[data.remoteid] = pc;\n      } else {\n        pc = peerConnections[data.remoteid];\n      }\n\n      if (data.type === \"offer\") {\n        if (lid > data.remoteid && (isOffering || pc.signalingState != \"stable\")) {\n          return;\n        }\n\n        await pc.setRemoteDescription(data.payload);\n        await pc.setLocalDescription();\n        console.log(\"sending answer\", pc.localDescription, lid);\n        senderFunction(\"payload\", {\n          payload: pc.localDescription,\n          remoteid: lid,\n          type: \"answer\",\n          target: data.remoteid,\n        });\n      }\n\n      if (data.type === \"answer\") {\n        console.log(\"got answer\", data);\n        pc.setRemoteDescription(new RTCSessionDescription(data.payload));\n      }\n\n      if (data.type === \"ice\") {\n        pc.addIceCandidate(new RTCIceCandidate(data.payload));\n      }\n    });\n\n    socket.on(\"call-started\", () => {\n      console.log(\"call started\");\n      socket.emit(\"want-to-watch\");\n    });\n\n    socket.on(\"hangup\", sdp => {\n      console.log(\"hung up\")\n    })\n\n    socket.on(\"peer-left\", (socketid) => {\n      setRemoteVideos((remoteVideos) =>\n        remoteVideos.filter((stream) => stream.socketid != socketid)\n      );\n    });\n  }, []);\n\n  const hangUp = () => {\n    socket.emit(\"hangup\");\n    localVideo.current.srcObject.getTracks()[0].enabled = false;\n    setIsDisplaying(false)\n  };\n\n\n  //\n  const localVideo = useRef();\n  const remoteVideo = useRef();\n\n  const videoStyle = {\n    width: \"100%\",\n    height: \"auto\",\n    margin: 5,\n    backgroundColor: \"black\",\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>WebRTC Media sharing</h1>\n      <h3>Rum: \"{room}\"</h3>\n      <div className=\"VideoContainer\">\n        <video\n          className=\"Video\"\n          style={videoStyle}\n          ref={localVideo}\n          autoPlay\n        ></video>\n        <p>Din egen bild du visar</p>\n      </div>\n      <br />\n      {isDisplaying \n      ? \n      <button class=\"btn btn-warning\" onClick={() => hangUp()}>Pausa</button>\n      :\n      <button class=\"btn btn-primary\" onClick={() => callRemote()}>Share my Screen</button>\n      }\n      <hr></hr>\n      {remoteVideos.map((stream, index) => (\n        <Video key={index} stream={stream} style={videoStyle} users={users} pcs={peerConnections} />\n      ))}\n    </div>\n  );\n}\n\nexport default MainVideo;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Stats from './Stats'\n\nconst Video = (props) => {\n\n  const { stream, style, users, pcs } = props;\n  const [name, setName] = useState(\"\")\n  const [show, setShow] = useState(true)\n\n    \n\n  useEffect(() => {\n    videoRef.current.srcObject = stream.video;\n    videoRef.current.controls = true;\n    setName(users.filter(elem => elem[0] == stream.socketid)[0][1].name)\n  }, [name]);\n\n  const videoRef = useRef();\n\n  return (\n    <div className={show ? \"visibile\" : \"invisible\" } >\n      <h1>Video från {name}</h1>\n      <video ref={videoRef} style={style} autoPlay={true}></video>\n      <Stats pcs={pcs} id={stream.socketid}></Stats>\n    </div>\n  );\n};\n\n\n\n\nexport default Video;\n","import React from \"react\";\n\nconst Sidebar = (props) => {\n  const { peersInRoom} = props;\n\n  return (\n    <div className=\"bg-light border-right\" id=\"sidebar-wrapper\">\n    <br></br>\n      <div className=\"sidebar-heading\">Anslutna i rummet:</div>\n      <div>\n      </div>\n      <div id=\"sidebarContent\">\n        {peersInRoom.map( peer => (\n          <div>\n          <h4>{peer[1].name}</h4>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  return (\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a className=\"navbar-brand\" href=\"#\">Skärmdelningsapp 3000</a>\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul className=\"navbar-nav mr-auto\">\n      <li className=\"nav-item active\">\n        <a className=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\n\nconst Login = (props) => {\n  const { setLoggedIn, setName, setRoom } = props;\n  const [value, setValue] = useState(\"\");\n  const [roomValue, setRoomValue] = useState(\"\");\n\n  const handleNameChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleRoomChange = (e) => {\n    setRoomValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (value && roomValue) {\n      setName(value);\n      setRoom(roomValue)\n      setLoggedIn(true);\n    }\n  };\n\n  const style = {\n    margin: \"auto\",\n    marginTop: \"50px\",\n    width: \"60%\",\n    padding: \"10px\",\n  };\n\n  return (\n    <div style={style}>\n      <h2>Välkommen till skärmdelningsappen</h2>\n      <form onSubmit={handleSubmit}>\n        <br></br>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"name\"\n          placeholder=\"Namn\"\n          aria-label=\"Name\"\n          value={value}\n          onChange={handleNameChange}\n        />\n        <br></br>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"Room\"\n          placeholder=\"Skriv in ett rum att ansluta till\"\n          aria-label=\"Room\"\n          value={roomValue}\n          onChange={handleRoomChange}\n        />\n        <br></br>\n        <button type=\"submit\" className=\"btn-primary\">\n          Enter\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Components/Sidebar.css\";\nimport MainVideo from \"./Components/MainVideo\"\nimport Sidebar from \"./Components/Sidebar\";\nimport Navbar from \"./Components/Navbar\";\nimport Login from \"./Components/Login\";\n\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [peersInRoom, setPeersInRoom] = useState([])\n\n\n  return (\n    <div className=\"container-fluid\">\n      <Navbar></Navbar>\n      <div className=\"row\">\n        <div id=\"sidebar-wrapper\" className=\"col-2\">\n          <Sidebar\n          peersInRoom={peersInRoom}\n          ></Sidebar>\n        </div>\n        <div id=\"content-wrapper\" className=\"col-7\">\n          <div id=\"main-area\" className=\"container-fluid\">\n            {loggedIn ? (\n              <MainVideo\n                loginName={name}\n                room={room}\n                peersInRoom={peersInRoom}\n                setPeersInRoom={setPeersInRoom}\n              ></MainVideo>\n            ) : (\n              <Login\n                setLoggedIn={setLoggedIn}\n                setName={setName}\n                setRoom={setRoom}\n              ></Login>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}